{"version":3,"sources":["model/Sum.ts","model/Table.ts","model/SumBank.ts","model/SumGenerator.ts","SumComp.tsx","SheetColumn.tsx","Sheet.tsx","model/ClubCriteria.ts","ClubCard.tsx","Home.tsx","Navigation.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Operator","Table","tableName","questionsToAnswer","start","end","this","generateFullTable","x","push","String","length","pos","getRandomPositon","value","index","indexOf","splice","Number","max","Math","floor","random","Sum","param1","param2","operator","MULTIPLY","decimails","result","blank","calculateResult","getRandomBlank","DIVIDE","displayNumber","number","toString","maybe","param","SumBank","tables","table","getRandomTableIndex","isEmpty","Error","getRandomTable","times","getNextEntry","total","forEach","getQuestionsRemaining","SumGenerator","criteria","bank","count","numberOfQuestions","sums","populateSumBank","nextSum","getNextSum","shuffleParameters","decimals","convertToDecimals","divisions","maybeConvertToDivision","timesTables","addTable","SumComp","props","operatorDisplay","dangerouslySetInnerHTML","__html","React","Component","SheetColumn","questions","className","map","sum","idx","key","Sheet","sumsPerCol","sumsToSplit","cols","splitSize","round","startPos","results","col","endPos","colList","slice","splitInto","club","generateSums","Container","Row","name","description","DECIMAL_CLUB","CLUB_99","CLUB_88","CLUB_77","CLUB_66","CLUB_55","CLUB_44","CLUB_33","CLUB_22","CLUB_11","ClubCard","onSelection","Card","style","width","Body","Title","Text","to","Button","variant","onClick","handleClick","bind","Home","Jumbotron","Col","Navigation","history","useHistory","event","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","NavDropdown","title","Item","e","App","clubSelected","state","setState","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.444c667d.chunk.js","sourcesContent":["export enum Operator {\r\n  MULTIPLY = \"*\",\r\n  DIVIDE = \"&divide;\",\r\n}\r\n\r\nexport class Sum {\r\n  public decimails: boolean = false;\r\n  public result: number;\r\n  public blank: number;\r\n\r\n  constructor(\r\n    public param1: number,\r\n    public param2: number,\r\n    public operator: Operator = Operator.MULTIPLY\r\n  ) {\r\n    this.result = this.calculateResult();\r\n    this.blank = this.getRandomBlank();\r\n  }\r\n\r\n  protected getRandomBlank(): number {\r\n    const min = 1;\r\n    const max = 3;\r\n    return min + Math.floor(Math.random() * (max - min + 1));\r\n  }\r\n\r\n  private calculateResult(): number {\r\n    switch (this.operator) {\r\n      case Operator.MULTIPLY:\r\n        return this.param1 * this.param2;\r\n      case Operator.DIVIDE:\r\n        return this.param1 / this.param2;\r\n    }\r\n  }\r\n\r\n  public getDisplay(): string {\r\n    return (\r\n      this.displayNumber(this.param1, 1) +\r\n      \" \" +\r\n      this.operator +\r\n      \" \" +\r\n      this.displayNumber(this.param2, 2) +\r\n      \" = \" +\r\n      this.displayNumber(this.result, 3)\r\n    );\r\n  }\r\n\r\n  private displayNumber(number: number, pos: number): string {\r\n    if (pos === this.blank) {\r\n      return \"__\";\r\n    }\r\n\r\n    return number.toString();\r\n  }\r\n\r\n  protected maybe(): boolean {\r\n    return Math.random() >= 0.5;\r\n  }\r\n\r\n  public shuffleParameters() {\r\n    if (this.maybe()) {\r\n      const param = this.param1;\r\n      this.param1 = this.param2;\r\n      this.param2 = param;\r\n    }\r\n  }\r\n\r\n  public maybeConvertToDivision() {\r\n    if (this.maybe()) {\r\n      this.operator = Operator.DIVIDE;\r\n      const param = this.param1;\r\n      this.param1 = this.result;\r\n      this.result = param;\r\n    }\r\n  }\r\n\r\n  public convertToDecimals() {\r\n    if (this.maybe()) {\r\n      this.param1 = this.param1 / 10;\r\n      this.result = this.result / 10;\r\n    } else {\r\n      this.param2 = this.param2 / 10;\r\n      this.result = this.result / 10;\r\n    }\r\n  }\r\n}\r\n","\r\nexport class Table {\r\n\t\r\n\tprivate questionsToAnswer : Array<string> = [];\r\n\t\r\n\tprivate readonly start = 1;\r\n\tprivate readonly end = 12;\r\n\t\r\n\tconstructor(public tableName: number){\r\n\t\tthis.tableName = tableName;\r\n\t\tthis.generateFullTable();\r\n\t}\r\n\t\r\n\tprivate generateFullTable() {\r\n\t\tfor (var x = this.start; x<=this.end ; x++){\r\n\t\t\tthis.questionsToAnswer.push(String(x));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Determine whether all the questions have been answered\r\n\t */\r\n\tpublic isEmpty() : boolean{\r\n\t\treturn this.questionsToAnswer.length===0;\r\n\t}\r\n\t\r\n\tpublic getNextEntry() : number {\r\n\t\t\r\n\t\tvar pos = this.getRandomPositon();\r\n\t\tconst value = this.questionsToAnswer[pos];\r\n\t\tconst index = this.questionsToAnswer.indexOf(value, 0);\r\n\t\tif (index > -1) {\r\n\t\t\tthis.questionsToAnswer.splice(index, 1);\r\n\t\t}\r\n\t\treturn Number(value);\r\n\t}\r\n\r\n\tpublic getQuestionsRemaining() : number{\r\n\t\treturn this.questionsToAnswer.length;\r\n\t}\r\n\t\r\n\tprivate getRandomPositon(): number{\r\n\t\tconst min = 0;\r\n\t\tconst max = this.questionsToAnswer.length-1;\r\n\t\treturn  min +  Math.floor((Math.random() * ((max - min) + 1)));\t\t\r\n\t}\r\n}\r\n","import { Table } from \"./Table\";\r\nimport { Sum } from \"./Sum\";\r\n\r\nexport class SumBank {\r\n\r\n\tprivate tables: Array<Table> = []; \r\n\t\r\n\tpublic addTable(table: number) {\r\n\t\tthis.tables.push(new Table(table));\r\n\t}\t\r\n\t\r\n\tprotected getRandomTable(): Table{\r\n\r\n\t\treturn this.tables[this.getRandomTableIndex()];\r\n\t}\r\n\t\r\n\tprotected getRandomTableIndex():number{\t\t\r\n\t\tconst min = 0;\r\n\t\tconst max = this.tables.length-1;\r\n\t\treturn  min + Math.floor((Math.random() * ((max - min) + 1)));\r\n\t}\r\n\t\r\n\tpublic getNextSum(): Sum {\r\n\t\tif (this.isEmpty()){\r\n\t\t\tthrow new Error(\"Bank has no sums remaining\");\r\n\t\t}\r\n\t\tvar table = this.getRandomTable();\t\t\r\n\t\tvar times = table.getNextEntry();  \r\n\t\tif (table.isEmpty()){\r\n\t\t\tconst index = this.tables.indexOf(table, 0);\r\n\t\t\tif (index > -1) {\r\n\t\t\t\tthis.tables.splice(index, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn new Sum(table.tableName, times);\r\n\t}\r\n\t\r\n\tpublic isEmpty() : boolean{\r\n\t\treturn this.tables.length===0;\r\n\t}\r\n\t\r\n\tpublic getTotalSumsRemaining(): number{\r\n\t\tvar total = 0;\r\n\t\tthis.tables.forEach( (table: Table) =>{\r\n\t\t\ttotal += table.getQuestionsRemaining();\r\n\t\t})\r\n\t\treturn total;\r\n\t}\t\r\n}\r\n","import { SumBank } from \"./SumBank\";\r\nimport { Sum } from \"./Sum\";\r\nimport { Club } from \"./ClubCriteria\";\r\n\r\nexport class SumGenerator {\r\n\r\n\tprivate bank = new SumBank();\r\n\t\r\n\tconstructor(public criteria: Club){\r\n\t}\r\n\t\r\n\tpublic generateSums(count: number = this.criteria.numberOfQuestions) : Array<Sum> {\r\n\t\tvar sums : Array<Sum> = [];\r\n\t\t\r\n\t\tfor (var x=0; x< count; x++){\r\n\t\t\tif (this.bank.isEmpty()){\r\n\t\t\t\tthis.populateSumBank();\r\n\t\t\t}\r\n\t\t\tconst nextSum = this.bank.getNextSum();\r\n\t\t\tnextSum.shuffleParameters();\r\n\t\t\t\r\n\t\t\tif (this.criteria.decimals){\r\n\t\t\t\tnextSum.decimails = true;\r\n\t\t\t\tnextSum.convertToDecimals();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (this.criteria.divisions){\r\n\t\t\t\tnextSum.maybeConvertToDivision();\r\n\t\t\t}\r\n\t\t\tsums.push(nextSum);\r\n\t\t}\r\n\t\treturn sums;\r\n\t}\r\n\t\r\n\tprivate populateSumBank() {\r\n\t\tthis.criteria.timesTables.forEach( (table:number) =>{\r\n\t\t\tthis.bank.addTable(table);\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport function splitInto(sumsToSplit: Array<Sum>, cols:number):Array<Array<Sum>> {\r\n\tconst splitSize  = Math.floor(Math.round(sumsToSplit.length/cols));\r\n\t\r\n\tvar startPos = 0;\t\r\n\tconst results: Array<Array<Sum>> = [];\r\n\tfor (var col=0; col< cols; col++){\t\t\t\r\n\t\t\r\n\t\tvar endPos = startPos + splitSize;\r\n\t\tconst colList = sumsToSplit.slice(startPos, endPos);\t\t\t\r\n\t\tresults.push(colList);\r\n\t\tstartPos = endPos;\r\n\t}\r\n\treturn results;\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { Sum, Operator } from './model/Sum';\r\n\r\nexport interface SumProps {\r\n    value: Sum;\r\n}\r\n\r\nexport class SumComp extends React.Component<SumProps> {\r\n\r\n    private displayNumber(number: number, pos: number): string {\r\n        if (pos === this.props.value.blank) {\r\n            return \"_____\";\r\n        }\r\n        return number.toString();\r\n    }\r\n\r\n    render() {\r\n        const {value} = this.props;  \r\n        var operatorDisplay = <span>*</span>;\r\n        if (value.operator===Operator.DIVIDE){\r\n            operatorDisplay = <span dangerouslySetInnerHTML={{ __html: \"&divide;\"}}/>;\r\n        }       \r\n        return (\r\n            <h3>\r\n            {this.displayNumber(value.param1, 1)}&nbsp;\r\n            {operatorDisplay}&nbsp;\r\n            {this.displayNumber(value.param2, 2)}&nbsp;=&nbsp;\r\n            {this.displayNumber(value.result, 3)}</h3>\r\n        );\r\n    }\r\n}\r\n//<span dangerouslySetInnerHTML={{ __html: {value.operator} }}/>\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { Sum } from './model/Sum';\r\nimport { SumComp } from './SumComp';\r\n\r\nexport interface SheetColumnProps {\r\n  questions: Array<Sum>;\r\n}\r\n\r\nexport function SheetColumn(props: SheetColumnProps) {\r\n  const {questions} = props;\r\n  return (\r\n    <div className=\"col-sm-4\">\r\n      <table className=\"table\">\r\n        {questions.map(\r\n          (sum, idx): JSX.Element => {\r\n            return <tr><td><SumComp key={idx} value={sum} /></td></tr>\r\n          })}\r\n      </table>\r\n    </div>)\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { Club } from './model/ClubCriteria';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { SumGenerator, splitInto } from './model/SumGenerator';\r\n\r\nimport { SheetColumn } from \"./SheetColumn\";\r\n\r\nexport interface SheetProps {\r\n    club: Club;\r\n  }\r\n  \r\nexport class Sheet extends React.Component<SheetProps> {\r\n\r\nrender() {\r\n\r\n  const generate = new SumGenerator(this.props.club);\r\n  \r\n  const sums = generate.generateSums();\r\n  const sumsPerCol = splitInto(sums,2)\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n         <h1>{this.props.club.name} Club</h1>\r\n      </Row>\r\n      <Row>\r\n         <h5>{this.props.club.description}</h5>\r\n      </Row>\r\n      <Row><br/></Row>\r\n      <Row>\r\n        <SheetColumn key={1} questions={sumsPerCol[0]}/>\r\n        <SheetColumn key={2} questions={sumsPerCol[1]}/>\r\n      </Row>  \r\n    </Container>\r\n  );\r\n}}\r\n","export interface Club {\r\n  name: string;\r\n  description: string;\r\n  numberOfQuestions: number;\r\n  timesTables: Array<number>;\r\n  decimals: boolean;\r\n  divisions: boolean;\r\n}\r\n\r\nexport const DECIMAL_CLUB: Club = {\r\n  name: \"Decimal\",\r\n  description: \"99 Questions on all tables including decimals\",\r\n  numberOfQuestions: 99,\r\n  timesTables: [2, 3, 4, 5, 6, 7, 8, 9, 10],\r\n  divisions: true,\r\n  decimals: true,\r\n};\r\n\r\nexport const CLUB_99: Club = {\r\n  name: \"99\",\r\n  description: \"99 Questions on all tables\",\r\n  numberOfQuestions: 99,\r\n  timesTables: [2, 3, 4, 5, 6, 7, 8, 9, 10],\r\n  divisions: true,\r\n  decimals: false,\r\n};\r\n\r\nexport const CLUB_88: Club = {\r\n  name: \"88\",\r\n  description: \"88 Questions on all tables except 9\",\r\n  numberOfQuestions: 88,\r\n  timesTables: [2, 3, 4, 5, 6, 7, 8, 10],\r\n  divisions: true,\r\n  decimals: false,\r\n};\r\n\r\nexport const CLUB_77: Club = {\r\n  name: \"77\",\r\n  description: \"77 Questions on tables 2,3,4,5,6,7,10\",\r\n  numberOfQuestions: 77,\r\n  timesTables: [2, 3, 4, 5, 6, 7, 10],\r\n  divisions: true,\r\n  decimals: false,\r\n};\r\nexport const CLUB_66: Club = {\r\n  name: \"66\",\r\n  description: \"66 Questions on tables 2,3,4,5,6,10\",\r\n  numberOfQuestions: 66,\r\n  timesTables: [2, 3, 4, 5, 6, 10],\r\n  divisions: true,\r\n  decimals: false,\r\n};\r\nexport const CLUB_55: Club = {\r\n  name: \"55\",\r\n  description: \"55 Questions on tables 2,3,4,5,10\",\r\n  numberOfQuestions: 55,\r\n  timesTables: [2, 3, 4, 5, 10],\r\n  divisions: true,\r\n  decimals: false,\r\n};\r\nexport const CLUB_44: Club = {\r\n  name: \"44\",\r\n  description: \"44 Questions on tables 2,3,4,5,10\",\r\n  numberOfQuestions: 44,\r\n  timesTables: [2, 3, 4, 5, 10],\r\n  divisions: true,\r\n  decimals: false,\r\n};\r\nexport const CLUB_33: Club = {\r\n  name: \"33\",\r\n  description: \"33 Questions on tables 2,3,5,10\",\r\n  numberOfQuestions: 33,\r\n  timesTables: [2, 3, 5, 10],\r\n  divisions: true,\r\n  decimals: false,\r\n};\r\nexport const CLUB_22: Club = {\r\n  name: \"22\",\r\n  description: \"22 Questions on tables 2,5,10\",\r\n  numberOfQuestions: 22,\r\n  timesTables: [2, 5, 10],\r\n  divisions: false,\r\n  decimals: false,\r\n};\r\nexport const CLUB_11: Club = {\r\n  name: \"11\",\r\n  description: \"11 Questions on tables 2,5,10\",\r\n  numberOfQuestions: 11,\r\n  timesTables: [2, 5, 10],\r\n  divisions: false,\r\n  decimals: false,\r\n};\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { Club } from './model/ClubCriteria';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport {Link} from \"react-router-dom\";\r\nexport interface ClubCardProps {\r\n  club: Club;\r\n  onSelection: (club: Club) => void;\r\n}\r\n\r\nexport class ClubCard extends React.Component<ClubCardProps> {\r\n\r\n  handleClick(){\r\n    this.props.onSelection(this.props.club);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card style={{ width: '15rem' }}>\r\n        <Card.Body>\r\n          <Card.Title>{this.props.club.name} Club</Card.Title>\r\n          <Card.Text>\r\n            {this.props.club.description}\r\n          </Card.Text>\r\n          <Link to=\"sheet\">\r\n              <Button variant=\"primary\" onClick={this.handleClick.bind(this)}>Select</Button>\r\n          </Link>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport { Club, CLUB_11, CLUB_22, CLUB_33, CLUB_44, CLUB_55, DECIMAL_CLUB, CLUB_99, CLUB_88, CLUB_77, CLUB_66 } from './model/ClubCriteria';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { ClubCard } from './ClubCard';\r\n\r\nexport interface SelectClubProps {\r\n  onSelection: (club: Club) => void;\r\n}\r\n\r\nexport class Home extends React.Component<SelectClubProps> {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Container>\r\n        <Jumbotron>\r\n          <h1>Maths Club</h1>\r\n          <p>Learn the times tables - a little bit each day!</p>\r\n          <p>Start with the 11 club, each day print out and complete the questions. For 4 days a week, the sheet is not timed, its just for fun. However, on the 5th day you have 10 minutes to complete the questions. If you get all the questions right, you move up a club.</p>\r\n        </Jumbotron>\r\n        <Row>\r\n          <Col>\r\n            <ClubCard onSelection={this.props.onSelection} club={CLUB_11}></ClubCard>\r\n          </Col>\r\n          <Col>\r\n            <ClubCard onSelection={this.props.onSelection} club={CLUB_22}></ClubCard>\r\n          </Col>\r\n          <Col>\r\n            <ClubCard onSelection={this.props.onSelection} club={CLUB_33}></ClubCard>\r\n          </Col>\r\n          <Col>\r\n            <ClubCard onSelection={this.props.onSelection} club={CLUB_44}></ClubCard>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <ClubCard onSelection={this.props.onSelection} club={CLUB_55}></ClubCard>\r\n          </Col>\r\n          <Col>\r\n            <ClubCard onSelection={this.props.onSelection} club={CLUB_66}></ClubCard>\r\n          </Col>\r\n          <Col>\r\n            <ClubCard onSelection={this.props.onSelection} club={CLUB_77}></ClubCard>\r\n          </Col>\r\n          <Col>\r\n            <ClubCard onSelection={this.props.onSelection} club={CLUB_88}></ClubCard>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <ClubCard onSelection={this.props.onSelection} club={CLUB_99}></ClubCard>\r\n          </Col>\r\n          <Col>\r\n            <ClubCard onSelection={this.props.onSelection} club={DECIMAL_CLUB}></ClubCard>\r\n          </Col>\r\n          <Col>\r\n          </Col>\r\n          <Col>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Club, CLUB_11, CLUB_22, CLUB_33, CLUB_44, CLUB_55, DECIMAL_CLUB, CLUB_99, CLUB_88, CLUB_77, CLUB_66 } from './model/ClubCriteria';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\n\r\nexport interface NavigationProps {\r\n    onSelection: (club: Club) => void;\r\n}\r\n\r\nexport function Navigation(props: NavigationProps) {\r\n    const history = useHistory();\r\n\r\n    function handleClick(event: React.MouseEvent<HTMLElement>, club:Club) {\r\n        props.onSelection(club);\r\n        history.push(\"sheet\");\r\n    }\r\n\r\n    return (\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n            <Navbar.Brand href=\"home\">Maths Club</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    <NavDropdown title=\"Select Club\" id=\"SelectClub\">\r\n                        <NavDropdown.Item onClick={(e: any) => handleClick(e, CLUB_11)}>Club 11</NavDropdown.Item>\r\n                        <NavDropdown.Item onClick={(e: any) => handleClick(e, CLUB_22)}>Club 22</NavDropdown.Item>\r\n                        <NavDropdown.Item onClick={(e: any) => handleClick(e, CLUB_33)}>Club 33</NavDropdown.Item>\r\n                        <NavDropdown.Item onClick={(e: any) => handleClick(e, CLUB_44)}>Club 44</NavDropdown.Item>\r\n                        <NavDropdown.Item onClick={(e: any) => handleClick(e, CLUB_55)}>Club 55</NavDropdown.Item>\r\n                        <NavDropdown.Item onClick={(e: any) => handleClick(e, CLUB_66)}>Club 66</NavDropdown.Item>\r\n                        <NavDropdown.Item onClick={(e: any) => handleClick(e, CLUB_77)}>Club 77</NavDropdown.Item>\r\n                        <NavDropdown.Item onClick={(e: any) => handleClick(e, CLUB_88)}>Club 88</NavDropdown.Item>\r\n                        <NavDropdown.Item onClick={(e: any) => handleClick(e, CLUB_99)}>Club 99</NavDropdown.Item>\r\n                        <NavDropdown.Item onClick={(e: any) => handleClick(e, DECIMAL_CLUB)}>Decimals Club</NavDropdown.Item>\r\n                    </NavDropdown>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n} ","import React from 'react';\nimport './App.css';\nimport { Sheet } from './Sheet';\nimport { Club, CLUB_11 } from './model/ClubCriteria';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport { Home } from './Home';\nimport { Navigation } from './Navigation';\n\ninterface AppState {\n  clubSelected: Club;\n}\nexport class App extends React.Component<{}, AppState> {\n\n  constructor(props: any) {\n    super(props);\n    this.clubSelected = this.clubSelected.bind(this);\n    this.state = {\n      clubSelected: CLUB_11,\n    };\n  }\n\n  clubSelected(club: Club) {\n    this.setState({\n      clubSelected: club\n    })\n  }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Navigation onSelection={this.clubSelected} />\n          <Switch>\n            <Route path=\"/sheet\">\n              <Sheet club={this.state.clubSelected} />\n            </Route>\n            <Route path=\"/home\">\n              <Home onSelection={this.clubSelected} />\n            </Route>\n            <Route path=\"/\">\n              <Home onSelection={this.clubSelected} />\n            </Route>\n          </Switch>\n        </div>\n      </Router>);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}